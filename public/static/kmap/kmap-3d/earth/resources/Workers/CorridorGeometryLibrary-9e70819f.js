define(["exports","./when-cbf8cd21","./Math-e66fad2a","./Cartesian2-44433f55","./Transforms-23521d7e","./PolylineVolumeGeometryLibrary-466d8ee4","./PolylinePipeline-9b888896"],function(a,s,R,V,u,Q,U){"use strict";var e={},G=new V.Cartesian3,c=new V.Cartesian3,p=new V.Cartesian3,m=new V.Cartesian3,I=[new V.Cartesian3,new V.Cartesian3],q=new V.Cartesian3,j=new V.Cartesian3,k=new V.Cartesian3,F=new V.Cartesian3,H=new V.Cartesian3,J=new V.Cartesian3,K=new V.Cartesian3,W=new V.Cartesian3,X=new V.Cartesian3,Y=new V.Cartesian3,d=new u.Quaternion,g=new u.Matrix3;function Z(a,e,r,n,t){var i,s=V.Cartesian3.angleBetween(V.Cartesian3.subtract(e,a,G),V.Cartesian3.subtract(r,a,c)),o=n===Q.CornerType.BEVELED?1:Math.ceil(s/R.CesiumMath.toRadians(5))+1,n=3*o,C=new Array(n),l=(C[n-3]=r.x,C[n-2]=r.y,C[n-1]=r.z,i=t?u.Matrix3.fromQuaternion(u.Quaternion.fromAxisAngle(V.Cartesian3.negate(a,G),s/o,d),g):u.Matrix3.fromQuaternion(u.Quaternion.fromAxisAngle(a,s/o,d),g),0);e=V.Cartesian3.clone(e,G);for(var y=0;y<o;y++)e=u.Matrix3.multiplyByVector(i,e,e),C[l++]=e.x,C[l++]=e.y,C[l++]=e.z;return C}function $(a,e,r,n){var t=G;return n||(e=V.Cartesian3.negate(e,e)),[(t=V.Cartesian3.add(a,e,t)).x,t.y,t.z,r.x,r.y,r.z]}function _(a,e,r,n){for(var t=new Array(a.length),i=new Array(a.length),s=V.Cartesian3.multiplyByScalar(e,r,G),o=V.Cartesian3.negate(s,c),C=0,l=a.length-1,y=0;y<a.length;y+=3){var u=V.Cartesian3.fromArray(a,y,p),d=V.Cartesian3.add(u,o,m),d=(t[C++]=d.x,t[C++]=d.y,t[C++]=d.z,V.Cartesian3.add(u,s,m));i[l--]=d.z,i[l--]=d.y,i[l--]=d.x}return n.push(t,i),n}e.addAttribute=function(a,e,r,n){var t=e.x,i=e.y,e=e.z;s.defined(r)&&(a[r]=t,a[r+1]=i,a[r+2]=e),s.defined(n)&&(a[n]=e,a[n-1]=i,a[n-2]=t)};var aa=new V.Cartesian3,ea=new V.Cartesian3;e.computePositions=function(a){for(var e,r,n,t,i,s,o,C,l=a.granularity,y=a.positions,u=a.ellipsoid,d=a.width/2,c=a.cornerType,p=a.saveAttributes,m=q,g=j,h=k,f=F,w=H,z=J,x=K,P=W,A=X,B=Y,E=[],S=p?[]:void 0,b=p?[]:void 0,v=y[0],D=y[1],g=V.Cartesian3.normalize(V.Cartesian3.subtract(D,v,g),g),m=u.geodeticSurfaceNormal(v,m),f=V.Cartesian3.normalize(V.Cartesian3.cross(m,g,f),f),x=(p&&(S.push(f.x,f.y,f.z),b.push(m.x,m.y,m.z)),V.Cartesian3.clone(v,x)),v=D,h=V.Cartesian3.negate(g,h),M=[],T=y.length,N=1;N<T-1;N++){m=u.geodeticSurfaceNormal(v,m),D=y[N+1],g=V.Cartesian3.normalize(V.Cartesian3.subtract(D,v,g),g),w=V.Cartesian3.normalize(V.Cartesian3.add(g,h,w),w);var L=V.Cartesian3.multiplyByScalar(m,V.Cartesian3.dot(g,m),aa),O=(V.Cartesian3.subtract(g,L,L),V.Cartesian3.normalize(L,L),V.Cartesian3.multiplyByScalar(m,V.Cartesian3.dot(h,m),ea));V.Cartesian3.subtract(h,O,O),V.Cartesian3.normalize(O,O),!R.CesiumMath.equalsEpsilon(Math.abs(V.Cartesian3.dot(L,O)),1,R.CesiumMath.EPSILON7)&&(w=V.Cartesian3.cross(w,m,w),w=V.Cartesian3.cross(m,w,w),w=V.Cartesian3.normalize(w,w),L=d/Math.max(.25,V.Cartesian3.magnitude(V.Cartesian3.cross(w,h,G))),O=Q.PolylineVolumeGeometryLibrary.angleIsGreaterThanPi(g,h,v,u),w=V.Cartesian3.multiplyByScalar(w,L,w),O?(P=V.Cartesian3.add(v,w,P),B=V.Cartesian3.add(P,V.Cartesian3.multiplyByScalar(f,d,B),B),A=V.Cartesian3.add(P,V.Cartesian3.multiplyByScalar(f,2*d,A),A),I[0]=V.Cartesian3.clone(x,I[0]),I[1]=V.Cartesian3.clone(B,I[1]),E=_(e=U.PolylinePipeline.generateArc({positions:I,granularity:l,ellipsoid:u}),f,d,E),p&&(S.push(f.x,f.y,f.z),b.push(m.x,m.y,m.z)),z=V.Cartesian3.clone(A,z),f=V.Cartesian3.normalize(V.Cartesian3.cross(m,g,f),f),A=V.Cartesian3.add(P,V.Cartesian3.multiplyByScalar(f,2*d,A),A),x=V.Cartesian3.add(P,V.Cartesian3.multiplyByScalar(f,d,x),x),c===Q.CornerType.ROUNDED||c===Q.CornerType.BEVELED?M.push({leftPositions:Z(P,z,A,c,O)}):M.push({leftPositions:$(v,V.Cartesian3.negate(w,w),A,O)})):(A=V.Cartesian3.add(v,w,A),B=V.Cartesian3.add(A,V.Cartesian3.negate(V.Cartesian3.multiplyByScalar(f,d,B),B),B),P=V.Cartesian3.add(A,V.Cartesian3.negate(V.Cartesian3.multiplyByScalar(f,2*d,P),P),P),I[0]=V.Cartesian3.clone(x,I[0]),I[1]=V.Cartesian3.clone(B,I[1]),E=_(e=U.PolylinePipeline.generateArc({positions:I,granularity:l,ellipsoid:u}),f,d,E),p&&(S.push(f.x,f.y,f.z),b.push(m.x,m.y,m.z)),z=V.Cartesian3.clone(P,z),f=V.Cartesian3.normalize(V.Cartesian3.cross(m,g,f),f),P=V.Cartesian3.add(A,V.Cartesian3.negate(V.Cartesian3.multiplyByScalar(f,2*d,P),P),P),x=V.Cartesian3.add(A,V.Cartesian3.negate(V.Cartesian3.multiplyByScalar(f,d,x),x),x),c===Q.CornerType.ROUNDED||c===Q.CornerType.BEVELED?M.push({rightPositions:Z(A,z,P,c,O)}):M.push({rightPositions:$(v,w,P,O)})),h=V.Cartesian3.negate(g,h)),v=D}return m=u.geodeticSurfaceNormal(v,m),I[0]=V.Cartesian3.clone(x,I[0]),I[1]=V.Cartesian3.clone(v,I[1]),e=U.PolylinePipeline.generateArc({positions:I,granularity:l,ellipsoid:u}),E=_(e,f,d,E),p&&(S.push(f.x,f.y,f.z),b.push(m.x,m.y,m.z)),c===Q.CornerType.ROUNDED&&(a=q,n=k,t=(r=E)[1],i=V.Cartesian3.fromArray(r[1],t.length-3,j),n=V.Cartesian3.fromArray(r[0],0,n),s=Z(a=V.Cartesian3.midpoint(i,n,a),i,n,Q.CornerType.ROUNDED,!1),o=r.length-1,C=r[o-1],t=r[o],i=V.Cartesian3.fromArray(C,C.length-3,i),n=V.Cartesian3.fromArray(t,0,n),r=[s,Z(V.Cartesian3.midpoint(i,n,a),i,n,Q.CornerType.ROUNDED,!1)]),{positions:E,corners:M,lefts:S,normals:b,endPositions:r}},a.CorridorGeometryLibrary=e});
