define(["exports","./when-cbf8cd21","./Check-35e1a91d","./Math-e66fad2a","./Cartesian2-44433f55","./Transforms-23521d7e","./Plane-47e9c397","./EllipsoidTangentPlane-ae6dc4fa"],function(a,b,t,w,P,N,y,O){"use strict";function A(a,t){this.center=P.Cartesian3.clone(b.defaultValue(a,P.Cartesian3.ZERO)),this.halfAxes=N.Matrix3.clone(b.defaultValue(t,N.Matrix3.ZERO))}A.packedLength=P.Cartesian3.packedLength+N.Matrix3.packedLength,A.pack=function(a,t,e){return e=b.defaultValue(e,0),P.Cartesian3.pack(a.center,t,e),N.Matrix3.pack(a.halfAxes,t,e+P.Cartesian3.packedLength),t},A.unpack=function(a,t,e){return t=b.defaultValue(t,0),b.defined(e)||(e=new A),P.Cartesian3.unpack(a,t,e.center),N.Matrix3.unpack(a,t+P.Cartesian3.packedLength,e.halfAxes),e};var T=new P.Cartesian3,R=new P.Cartesian3,I=new P.Cartesian3,E=new P.Cartesian3,L=new P.Cartesian3,z=new P.Cartesian3,S=new N.Matrix3,U={unitary:new N.Matrix3,diagonal:new N.Matrix3},l=(A.fromPoints=function(a,t){if(b.defined(t)||(t=new A),!b.defined(a)||0===a.length)return t.halfAxes=N.Matrix3.ZERO,t.center=P.Cartesian3.ZERO,t;for(var e=a.length,n=P.Cartesian3.clone(a[0],T),r=1;r<e;r++)P.Cartesian3.add(n,a[r],n);var i,s=1/e,o=(P.Cartesian3.multiplyByScalar(n,s,n),0),C=0,c=0,u=0,d=0,l=0;for(r=0;r<e;r++)o+=(i=P.Cartesian3.subtract(a[r],n,R)).x*i.x,C+=i.x*i.y,c+=i.x*i.z,u+=i.y*i.y,d+=i.y*i.z,l+=i.z*i.z;C*=s,c*=s,u*=s,d*=s,l*=s;var h=S,s=(h[0]=o*=s,h[1]=C,h[2]=c,h[3]=C,h[4]=u,h[5]=d,h[6]=c,h[7]=d,h[8]=l,N.Matrix3.computeEigenDecomposition(h,U)),h=N.Matrix3.clone(s.unitary,t.halfAxes),x=N.Matrix3.getColumn(h,0,E),M=N.Matrix3.getColumn(h,1,L),m=N.Matrix3.getColumn(h,2,z),f=-Number.MAX_VALUE,p=-Number.MAX_VALUE,g=-Number.MAX_VALUE,w=Number.MAX_VALUE,y=Number.MAX_VALUE,O=Number.MAX_VALUE;for(r=0;r<e;r++)i=a[r],f=Math.max(P.Cartesian3.dot(x,i),f),p=Math.max(P.Cartesian3.dot(M,i),p),g=Math.max(P.Cartesian3.dot(m,i),g),w=Math.min(P.Cartesian3.dot(x,i),w),y=Math.min(P.Cartesian3.dot(M,i),y),O=Math.min(P.Cartesian3.dot(m,i),O);x=P.Cartesian3.multiplyByScalar(x,.5*(w+f),x),M=P.Cartesian3.multiplyByScalar(M,.5*(y+p),M),m=P.Cartesian3.multiplyByScalar(m,.5*(O+g),m),s=P.Cartesian3.add(x,M,t.center),P.Cartesian3.add(s,m,s),h=I;return h.x=f-w,h.y=p-y,h.z=g-O,P.Cartesian3.multiplyByScalar(h,.5,h),N.Matrix3.multiplyByScale(t.halfAxes,h,t.halfAxes),t},new P.Cartesian3),h=new P.Cartesian3;function V(a,t,e,n,r,i,s,o,C,c,u){var d=(u=b.defined(u)?u:new A).halfAxes;N.Matrix3.setColumn(d,0,t,d),N.Matrix3.setColumn(d,1,e,d),N.Matrix3.setColumn(d,2,n,d);(t=l).x=(r+i)/2,t.y=(s+o)/2,t.z=(C+c)/2;e=h,e.x=(i-r)/2,e.y=(o-s)/2,e.z=(c-C)/2,n=u.center,t=N.Matrix3.multiplyByVector(d,t,t);return P.Cartesian3.add(a,t,n),N.Matrix3.multiplyByScale(d,e,d),u}var B=new P.Cartographic,v=new P.Cartesian3,_=new P.Cartographic,k=new P.Cartographic,W=new P.Cartographic,D=new P.Cartographic,q=new P.Cartographic,X=new P.Cartesian3,j=new P.Cartesian3,Z=new P.Cartesian3,G=new P.Cartesian3,F=new P.Cartesian3,Y=new P.Cartesian2,H=new P.Cartesian2,J=new P.Cartesian2,K=new P.Cartesian2,Q=new P.Cartesian2,$=new P.Cartesian3,aa=new P.Cartesian3,ta=new P.Cartesian3,ea=new P.Cartesian3,na=new P.Cartesian2,ra=new P.Cartesian3,ia=new P.Cartesian3,sa=new P.Cartesian3,oa=new y.Plane(P.Cartesian3.UNIT_X,0),x=(A.fromRectangle=function(a,t,e,n,r){var i,s,o,C,c;if(t=b.defaultValue(t,0),e=b.defaultValue(e,0),n=b.defaultValue(n,P.Ellipsoid.WGS84),a.width<=w.CesiumMath.PI)return s=P.Rectangle.center(a,B),x=n.cartographicToCartesian(s,v),i=(x=new O.EllipsoidTangentPlane(x,n)).plane,m=s.longitude,s=a.south<0&&0<a.north?0:s.latitude,c=P.Cartographic.fromRadians(m,a.north,e,_),u=P.Cartographic.fromRadians(a.west,a.north,e,k),s=P.Cartographic.fromRadians(a.west,s,e,W),d=P.Cartographic.fromRadians(a.west,a.south,e,D),m=P.Cartographic.fromRadians(m,a.south,e,q),c=n.cartographicToCartesian(c,X),l=n.cartographicToCartesian(u,j),s=n.cartographicToCartesian(s,Z),h=n.cartographicToCartesian(d,G),m=n.cartographicToCartesian(m,F),c=x.projectPointToNearestOnPlane(c,Y),C=x.projectPointToNearestOnPlane(l,H),s=x.projectPointToNearestOnPlane(s,J),M=x.projectPointToNearestOnPlane(h,K),m=x.projectPointToNearestOnPlane(m,Q),o=-(s=Math.min(C.x,s.x,M.x)),C=Math.max(C.y,c.y),c=Math.min(M.y,m.y),u.height=d.height=t,l=n.cartographicToCartesian(u,j),h=n.cartographicToCartesian(d,G),M=Math.min(y.Plane.getPointDistance(i,l),y.Plane.getPointDistance(i,h)),m=e,V(x.origin,x.xAxis,x.yAxis,x.zAxis,s,o,c,C,M,m,r);var u=0<a.south,d=a.north<0,l=u?a.south:d?a.north:0,h=P.Rectangle.center(a,B).longitude,x=P.Cartesian3.fromRadians(h,l,e,n,$);x.z=0;var M,m,f=Math.abs(x.x)<w.CesiumMath.EPSILON10&&Math.abs(x.y)<w.CesiumMath.EPSILON10?P.Cartesian3.UNIT_X:P.Cartesian3.normalize(x,aa),p=P.Cartesian3.UNIT_Z,g=P.Cartesian3.cross(f,p,ta),h=(i=y.Plane.fromPointNormal(x,f,oa),P.Cartesian3.fromRadians(h+w.CesiumMath.PI_OVER_TWO,l,e,n,ea)),h=(s=-(o=P.Cartesian3.dot(y.Plane.projectPointOntoPlane(i,h,na),g)),C=P.Cartesian3.fromRadians(0,a.north,d?t:e,n,ra).z,c=P.Cartesian3.fromRadians(0,a.south,u?t:e,n,ia).z,P.Cartesian3.fromRadians(a.east,l,e,n,sa));return V(x,g,p,f,s,o,c,C,M=y.Plane.getPointDistance(i,h),m=0,r)},A.clone=function(a,t){if(b.defined(a))return b.defined(t)?(P.Cartesian3.clone(a.center,t.center),N.Matrix3.clone(a.halfAxes,t.halfAxes),t):new A(a.center,a.halfAxes)},A.intersectPlane=function(a,t){var e=a.center,n=t.normal,a=a.halfAxes,r=n.x,i=n.y,s=n.z,r=Math.abs(r*a[N.Matrix3.COLUMN0ROW0]+i*a[N.Matrix3.COLUMN0ROW1]+s*a[N.Matrix3.COLUMN0ROW2])+Math.abs(r*a[N.Matrix3.COLUMN1ROW0]+i*a[N.Matrix3.COLUMN1ROW1]+s*a[N.Matrix3.COLUMN1ROW2])+Math.abs(r*a[N.Matrix3.COLUMN2ROW0]+i*a[N.Matrix3.COLUMN2ROW1]+s*a[N.Matrix3.COLUMN2ROW2]),i=P.Cartesian3.dot(n,e)+t.distance;return i<=-r?N.Intersect.OUTSIDE:r<=i?N.Intersect.INSIDE:N.Intersect.INTERSECTING},new P.Cartesian3),M=new P.Cartesian3,m=new P.Cartesian3,c=new P.Cartesian3,f=(A.distanceSquaredTo=function(a,t){var e,t=P.Cartesian3.subtract(t,a.center,l),a=a.halfAxes,n=N.Matrix3.getColumn(a,0,x),r=N.Matrix3.getColumn(a,1,M),a=N.Matrix3.getColumn(a,2,m),i=P.Cartesian3.magnitude(n),s=P.Cartesian3.magnitude(r),o=P.Cartesian3.magnitude(a),C=(P.Cartesian3.normalize(n,n),P.Cartesian3.normalize(r,r),P.Cartesian3.normalize(a,a),c),n=(C.x=P.Cartesian3.dot(t,n),C.y=P.Cartesian3.dot(t,r),C.z=P.Cartesian3.dot(t,a),0);return C.x<-i?n+=(e=C.x+i)*e:C.x>i&&(n+=(e=C.x-i)*e),C.y<-s?n+=(e=C.y+s)*e:C.y>s&&(n+=(e=C.y-s)*e),C.z<-o?n+=(e=C.z+o)*e:C.z>o&&(n+=(e=C.z-o)*e),n},new P.Cartesian3),p=new P.Cartesian3,e=(A.computePlaneDistances=function(a,t,e,n){b.defined(n)||(n=new N.Interval);var r=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,s=a.center,a=a.halfAxes,o=N.Matrix3.getColumn(a,0,x),C=N.Matrix3.getColumn(a,1,M),a=N.Matrix3.getColumn(a,2,m),c=P.Cartesian3.add(o,C,f),u=(P.Cartesian3.add(c,a,c),P.Cartesian3.add(c,s,c),P.Cartesian3.subtract(c,t,p)),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i);return P.Cartesian3.add(s,o,c),P.Cartesian3.add(c,C,c),P.Cartesian3.subtract(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.add(s,o,c),P.Cartesian3.subtract(c,C,c),P.Cartesian3.add(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.add(s,o,c),P.Cartesian3.subtract(c,C,c),P.Cartesian3.subtract(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.subtract(s,o,c),P.Cartesian3.add(c,C,c),P.Cartesian3.add(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.subtract(s,o,c),P.Cartesian3.add(c,C,c),P.Cartesian3.subtract(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.subtract(s,o,c),P.Cartesian3.subtract(c,C,c),P.Cartesian3.add(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),P.Cartesian3.subtract(s,o,c),P.Cartesian3.subtract(c,C,c),P.Cartesian3.subtract(c,a,c),P.Cartesian3.subtract(c,t,u),d=P.Cartesian3.dot(e,u),r=Math.min(d,r),i=Math.max(d,i),n.start=r,n.stop=i,n},new N.BoundingSphere);A.isOccluded=function(a,t){a=N.BoundingSphere.fromOrientedBoundingBox(a,e);return!t.isBoundingSphereVisible(a)},A.prototype.intersectPlane=function(a){return A.intersectPlane(this,a)},A.prototype.distanceSquaredTo=function(a){return A.distanceSquaredTo(this,a)},A.prototype.computePlaneDistances=function(a,t,e){return A.computePlaneDistances(this,a,t,e)},A.prototype.isOccluded=function(a){return A.isOccluded(this,a)},A.equals=function(a,t){return a===t||b.defined(a)&&b.defined(t)&&P.Cartesian3.equals(a.center,t.center)&&N.Matrix3.equals(a.halfAxes,t.halfAxes)},A.prototype.clone=function(a){return A.clone(this,a)},A.prototype.equals=function(a){return A.equals(this,a)},a.OrientedBoundingBox=A});
